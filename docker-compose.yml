version: '3.8'

services:
  db:
    image: postgres:13.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    restart: always
    env_file:
      - .env
  web:
    build: .
    command: bash -c "python manage.py migrate --noinput && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
    ports:
      - '8000:8000'
    depends_on:
      - db
    env_file:
      - .env
  redis:
    container_name: redis
    image: redis:alpine
    restart: unless-stopped
  celery:
    build: .
    restart: always
    command: celery worker --app=notification_test --loglevel=info
    volumes:
      - .:/app
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
      - web
      - db
  dashboard:
    container_name: dashboard
    build: .
    command: flower --app=notification_test --port=5555 broker=redis://redis:6379/0
    ports:
      - '5555:5555'
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
      - web
      - celery
volumes:
  postgres_data:
  static_value:
  media_value: